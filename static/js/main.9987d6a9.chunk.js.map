{"version":3,"sources":["utils/constants.js","assets/Logo.svg","components/logo/Logo.js","components/loading/Loading.js","components/filters/TransferFilter.js","components/filters/TicketTypeSort.js","utils/common.js","components/ticket/Ticket.js","components/ticket/TicketTemplate.js","components/ticket-list/TicketList.js","components/show-more-button/ShowMoreButton.js","App.js","hooks/useServer.js","index.js"],"names":["filterOptions","ALL","DIRECT","ONE_STOP","TWO_STOPS","THREE_STOPS","sortTransferOptions","PRICE","DURATION","OPTIMAL","filterOptionsMap","Map","Logo","className","src","logo","alt","Loading","TransferFilter","transferFilterOptions","changeCurrentTransferFilterOptions","isLoading","allOptions","keys","map","option","type","checked","includes","onChange","filter","length","handleFilterOptionChange","TicketTypeSort","currentSortOption","changeSortOption","Object","entries","prop","key","value","onClick","getPriceFormatted","price","toString","replace","getDurationFormatted","durationInMinutes","hours","Math","floor","minutes","trim","getTimeFromDate","date","Date","toLocaleTimeString","hour","minute","addMinutesToDate","initialDate","minutesToAdd","startDate","resultDate","getTime","getSegmentsDurationReducer","currentSegment","nextSegment","duration","getSegmentsStopsReducer","stops","getSortedTickets","tickets","currentFilterOptions","ticketsToSort","filteredTickets","forEach","filteredTicketsByOption","ticket","segments","every","segment","get","getFilteredTickets","ascOrder","sort","currentTicket","nextTicket","getSortedTicketsByPrice","reduce","getSortedTicketsByDuration","getOptimatlSortedTickets","Ticket","carrier","getStopsHeader","getStopsFromSegment","join","origin","destination","TicketTemplate","TicketList","amountTodisplay","ticketsToDisplay","slice","ShowMoreButton","changeDisplayTicketsAmount","prev","App","useState","setTickets","isPending","setIsPending","error","setError","useEffect","getSearchId","a","axios","console","log","message","subscribe","searchId","ticketsResponse","data","stop","setTimeout","then","useTickets","values","currentTransferFilterOptions","setCurrentTransferFilterOptions","setCurrentSortOption","setTicketsToDisplay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mZAAaA,EAAgB,CACzBC,IAAK,qBACLC,OAAQ,4EACRC,SAAU,2DACVC,UAAW,2DACXC,YAAa,4DAGJC,EAAsB,CAC/BC,MAAO,4EACPC,SAAU,4EACVC,QAAS,sEAGAC,EAAmB,IAAIC,IAAI,CACpC,CAACX,EAAcC,KAAM,GACrB,CAACD,EAAcE,OAAQ,GACvB,CAACF,EAAcG,SAAU,GACzB,CAACH,EAAcI,UAAW,GAC1B,CAACJ,EAAcK,YAAa,K,iBCnBjB,G,YAAA,IAA0B,kC,OCG1B,SAASO,IACpB,OACI,qBAAKC,UAAU,OAAf,SACI,qBAAKC,IAAKC,EAAMC,IAAI,wG,YCJjB,SAASC,IACpB,OACI,qBAAKJ,UAAU,iBAAf,SACI,qBAAKA,UAAU,SAAf,0BCDG,SAASK,EAAT,GAAmG,IAAzEC,EAAwE,EAAxEA,sBAAuBC,EAAiD,EAAjDA,mCAAoCC,EAAa,EAAbA,UAC1FC,EAAU,YAAOZ,EAAiBa,QAiBxC,OACI,sBAAKV,UAAU,kBAAf,UACI,oBAAIA,UAAU,yBAAd,iIACCQ,GAAa,cAAC,EAAD,IACd,oBAAIR,UAAU,mBAAd,SACKS,GAAcA,EAAWE,KAAI,SAACC,GAAD,OAC1B,oBAAiBZ,UAAU,2BAA3B,SACI,kCACI,uBACIa,KAAK,WACLb,UAAU,kBACVc,QAASR,EAAsBS,SAASH,GACxCI,SAAU,kBA3BL,SAACJ,GAC9B,OAAQA,GACJ,KAAKzB,EAAcC,IACfkB,EAAsBS,SAASH,GAC3BL,EAAmC,IACnCA,EAAmCE,GACvC,MACJ,QACIH,EAAsBS,SAASH,GAC3BL,EAAmC,YAAID,EAAsBW,QAAO,SAACA,GAAD,OAAYA,IAAWL,GAAUK,IAAW9B,EAAcC,SAC9HmB,EAAmC,sBAAID,GAAJ,CAA2BM,IAAQM,SAAWT,EAAWS,OAAS,EAAIT,EAAtE,sBAAuFH,GAAvF,CAA8GM,MAiBrHO,CAAyBP,MAE7C,+BAAOA,QARNA,W,MCxBd,SAASQ,EAAT,GAA6E,IAAnDC,EAAkD,EAAlDA,kBAAmBC,EAA+B,EAA/BA,iBAAkBd,EAAa,EAAbA,UAK1E,OACI,sBAAKR,UAAU,mBAAf,UACKQ,GAAa,cAAC,EAAD,IACd,8BACKf,GAAuB8B,OAAOC,QAAQ/B,GAAqBkB,KAAI,SAACc,GAC7D,kBAAqBA,EAArB,GAAOC,EAAP,KAAYC,EAAZ,KAEA,OACI,wBAAkBC,QAAS,WAX3CN,EAWoEK,IAAQ3B,UAAS,kBAAaqB,IAAsBM,EAAQ,UAAY,IAA5H,SACI,+BAAOA,KADED,W,UCfxBG,EAAoB,SAACC,GAAD,gBAAcA,EAAMC,WAAWC,QAAQ,wBAAyB,KAAhE,YAEpBC,EAAuB,SAACC,GACjC,IAAMC,EAAQC,KAAKC,MAAMH,EAAoB,IACvCI,EAAUJ,EAAoB,GACpC,MAAO,UAAGC,EAAQ,EAAR,UAAeA,EAAf,aAAH,YAAmCG,EAAU,EAAV,UAAiBA,EAAjB,cAAmCC,QAGpEC,EAAkB,SAACC,GAAD,OAAU,IAAIC,KAAKD,GAAME,mBAAmB,GAAI,CAAEC,KAAM,UAAWC,OAAQ,aAE7FC,EAAmB,SAACC,EAAaC,GAC1C,IAAMC,EAAY,IAAIP,KAAKK,GACrBG,EAAa,IAAIR,KAAKO,EAAUE,UAA2B,IAAfH,GAClD,OAAOR,EAAgBU,IAWrBE,EAA6B,SAACC,EAAgBC,GAAjB,OAAiCD,EAAeE,SAAWD,EAAYC,UAEpGC,EAA0B,SAACH,EAAgBC,GAAjB,OAAiCD,EAAeI,MAAMvC,OAASoC,EAAYG,MAAMvC,QAoCpGwC,EAAmB,SAACC,EAAStC,EAAmBuC,GACzD,IAAMC,EAhBiB,SAACF,EAASC,GACjC,GAAIA,EAAqB7C,SAAS5B,EAAcC,KAC5C,OAAOuE,EAGX,IAAIG,EAAkB,GAOtB,OALAF,EAAqBG,SAAQ,SAACnD,GAC1B,IAAMoD,EAA0BL,EAAQ1C,QAAO,SAACgD,GAAD,OAAYA,EAAOC,SAASC,OAAM,SAACC,GAAD,OAAaA,EAAQX,MAAMvC,SAAWrB,EAAiBwE,IAAIzD,SAC5IkD,EAAe,sBAAOA,GAAP,YAA2BE,OAGvCF,EAIeQ,CAAmBX,EAASC,GAElD,OAAQvC,GACJ,KAAK5B,EAAoBC,MACrB,OAnDoB,SAACmE,GAAoC,IAArBU,IAAoB,yDAChE,OAAOV,EAAcW,MAAK,SAACC,EAAeC,GACtC,OAAOH,EACPE,EAAc3C,MAAQ4C,EAAW5C,MACjC4C,EAAW5C,MAAQ2C,EAAc3C,SA+CtB6C,CAAwBd,GACnC,KAAKpE,EAAoBE,SACrB,OAzCuB,SAACkE,GAAoC,IAArBU,IAAoB,yDACnE,OAAOV,EAAcW,MAAK,SAACC,EAAeC,GACtC,OAAOH,EACPE,EAAcP,SAASU,OAAOxB,GAA8BsB,EAAWR,SAASU,OAAOxB,GACvFsB,EAAWR,SAASU,OAAOxB,GAA8BqB,EAAcP,SAASU,OAAOxB,MAqC5EyB,CAA2BhB,GACtC,QACI,OAnCqB,SAACA,GAC9B,OAAOA,EAAcW,MAAK,SAACC,EAAeC,GACtC,OAAID,EAAcP,SAASU,OAAOpB,GAA2BkB,EAAWR,SAASU,OAAOpB,GAAiC,EACrHiB,EAAcP,SAASU,OAAOpB,GAA2BkB,EAAWR,SAASU,OAAOpB,IAAkC,EACtHiB,EAAc3C,MAAQ4C,EAAW5C,MAAc,EAC/C2C,EAAc3C,MAAQ4C,EAAW5C,OAAe,EAE7C,KA4BIgD,CAAyBjB,KCtE7B,SAASkB,EAAT,GAA6B,IAAXd,EAAU,EAAVA,OACrBnC,EAA4BmC,EAA5BnC,MAAOkD,EAAqBf,EAArBe,QAASd,EAAYD,EAAZC,SAElBe,EAAiB,SAAC,GAAe,IAAbxB,EAAY,EAAZA,MACtB,OAAQA,EAAMvC,QACV,KAAK,EACD,MAAO,uCACX,KAAK,EACD,MAAM,GAAN,OAAUuC,EAAMvC,OAAhB,2DACJ,KAAK,EACL,KAAK,EACL,KAAK,EACD,MAAM,GAAN,OAAUuC,EAAMvC,OAAhB,2DACJ,KAAK,EAEL,QACI,MAAM,GAAN,OAAUuC,EAAMvC,OAAhB,6DAINgE,EAAsB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAH,OAAeA,EAAMvC,OAAS,EAAIuC,EAAM0B,KAAK,MAAQ,UAEjF,OACI,0BAASnF,UAAU,SAAnB,UACI,sBAAKA,UAAU,gBAAf,UACI,mBAAGA,UAAU,QAAb,SAAsB6B,EAAkBC,KACxC,qBAAK7B,IAAG,qCAAgC+E,EAAhC,QAA+ChF,UAAU,eAAeG,IAAG,8HAA0B6E,QAEhHd,EAASvD,KAAI,SAACyD,GAAD,OACV,sBAAKpE,UAAU,iBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,oBAAGA,UAAU,QAAb,UAAqB,+BAAOoE,EAAQgB,SAApC,MAAqD,+BAAOhB,EAAQiB,iBACpE,mBAAGrF,UAAU,WAAb,SAAwB,qEACxB,mBAAGA,UAAU,QAAb,SAAqB,+BAAOiF,EAAeb,UAE/C,sBAAKpE,UAAU,eAAf,UACI,oBAAGA,UAAU,QAAb,UAAqB,+BAAOwC,EAAgB4B,EAAQ3B,QAApD,WAAoE,+BAAOK,EAAiBsB,EAAQ3B,KAAM2B,EAAQb,eAClH,mBAAGvD,UAAU,WAAb,SAAwB,+BAAOiC,EAAqBmC,EAAQb,cAC5D,mBAAGvD,UAAU,QAAb,SAAqB,sBAAMA,UAAWoE,EAAQX,MAAMvC,OAAS,EAAI,GAAK,WAAjD,SAA8DgE,EAAoBd,YAT/G,UAAwCA,EAAQgB,QAAhD,OAAyDtD,GAAzD,OAAiEkD,U,YC7BlE,SAASM,IACpB,OACI,qCACI,cAAC,EAAD,IACA,sBAAKtF,UAAU,kBAAf,UACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,0BACf,qBAAKA,UAAU,4BAEnB,sBAAKA,UAAU,0BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,aAEnB,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,gBAEnB,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,kBAI3B,qBAAKA,UAAU,sBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,aAEnB,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,oBACf,qBAAKA,UAAU,gBAEnB,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,iBACf,qBAAKA,UAAU,2BCrChC,SAASuF,EAAT,GAA8D,IAAxC5B,EAAuC,EAAvCA,QAAS6B,EAA8B,EAA9BA,gBAAiBhF,EAAa,EAAbA,UACrDiF,EAAmB9B,EAAQ+B,MAAM,EAAGF,GAE1C,OACI,qBAAIxF,UAAU,cAAd,UACKQ,GACG,oBAAIR,UAAU,kCAAd,SACI,cAAC,EAAD,OAGNQ,GAAaiF,EAAiBvE,OAAS,GAAKuE,EAAiB9E,KAAI,SAACsD,GAAD,OAC/D,oBAA8CjE,UAAU,cAAxD,SACI,cAAC,EAAD,CAAQiE,OAAQA,KADpB,UAAYA,EAAOe,QAAnB,YAA8Bf,EAAOnC,c,MCZtC,SAAS6D,EAAT,GAAyD,IAA/BC,EAA8B,EAA9BA,2BAGrC,OACI,wBAAQ5F,UAAU,WAAW4B,QAHP,kBAAMgE,GAA2B,SAACC,GAAD,OAAUA,EVsB/B,MUnBlC,uFVmBkC,EUnBlC,iDC2BOC,MAvBf,WACE,MCRwB,WACtB,MAA8BC,mBAAS,IAAvC,mBAAOpC,EAAP,KAAgBqC,EAAhB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAwCA,OAtCAC,qBAAU,WACND,EAAS,MACTF,GAAa,GAEb,IAAMI,EAAW,uCAAG,sBAAAC,EAAA,+EAECC,IAAMnC,IZOV,+CYTG,wEAIZoC,QAAQC,IAAI,KAAIC,SAChBT,GAAa,GACbE,EAAS,KAAIO,SAND,yDAAH,qDAUXC,EAAS,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEAEVL,GAAa,GAFH,SAIoBM,IAAMnC,IAAN,UZHpB,uCYGoB,6BAA4CwC,IAJhE,UAIJC,EAJI,OAKVd,GAAW,SAAAH,GAAI,4BAAQA,GAAR,YAAiBiB,EAAgBC,KAAKpD,aAEhDmD,EAAgBC,KAAKC,KAPhB,iCAQAJ,EAAUC,GARV,+BAUNX,GAAa,GAVP,0DAaVe,YAAW,WACPL,EAAUC,KACX,KAfO,0DAAH,sDAmBfP,IACKY,MAAK,gBAAEH,EAAF,EAAEA,KAAF,OAAYH,EAAUG,EAAKF,eAEtC,IAEI,CAAElD,UAASsC,YAAWE,SDnCOgB,GAA9BxD,EAAR,EAAQA,QAASsC,EAAjB,EAAiBA,UAAWE,EAA5B,EAA4BA,MAC5B,EAAwEJ,mBAASxE,OAAO6F,OAAOjI,IAA/F,mBAAOkI,EAAP,KAAqCC,EAArC,KACA,EAAkDvB,mBAAStG,EAAoBC,OAA/E,mBAAO2B,EAAP,KAA0BkG,EAA1B,KACA,EAAgDxB,mBXWR,GWXxC,mBAAON,EAAP,KAAyB+B,EAAzB,KAEA,OACE,sBAAKxH,UAAU,MAAf,UACE,cAAC,EAAD,IACA,oBAAIA,UAAU,kBAAd,iNACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CAAgBM,sBAAuB+G,EAA8B9G,mCAAoC+G,EAAiC9G,UAAWyF,IACrJ,sBAAKjG,UAAU,kBAAf,UACE,cAAC,EAAD,CAAgBqB,kBAAmBA,EAAmBC,iBAAkBiG,EAAsB/G,UAAWyF,IACxGE,GAAS,4BAAIA,IACbxC,GAAW,cAAC,EAAD,CAAYA,QAASD,EAAiBC,EAAStC,EAAmBgG,GAA+B7B,gBAAiBC,EAAkBjF,UAAWyF,KACzJA,GAActC,GAAWA,EAAQzC,OXDH,GWC0C,cAAC,EAAD,CAAgB0E,2BAA4B4B,cEtBhIC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9987d6a9.chunk.js","sourcesContent":["export const filterOptions = {\r\n    ALL: \"все\",\r\n    DIRECT: \"без пересадок\",\r\n    ONE_STOP: \"1 пересадка\",\r\n    TWO_STOPS: \"2 пересадки\",\r\n    THREE_STOPS: \"3 пересадки\"\r\n};\r\n\r\nexport const sortTransferOptions = {\r\n    PRICE: \"самый дешевый\",\r\n    DURATION: \"самый быстрый\",\r\n    OPTIMAL: \"оптимальный\"\r\n}\r\n\r\nexport const filterOptionsMap = new Map([\r\n    [filterOptions.ALL, -1],\r\n    [filterOptions.DIRECT, 0],\r\n    [filterOptions.ONE_STOP, 1],\r\n    [filterOptions.TWO_STOPS, 2],\r\n    [filterOptions.THREE_STOPS, 3]\r\n]);\r\n\r\nexport const searchURL = \"https://front-test.beta.aviasales.ru/search\";\r\n\r\nexport const ticketsURL = \"https://front-test.beta.aviasales.ru\";\r\n\r\nexport const DISPLAY_TICKETS_BY_DEFAULT = 5;","export default __webpack_public_path__ + \"static/media/Logo.472c0451.svg\";","import './Logo.css';\r\nimport logo from '../../assets/Logo.svg';\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <div className=\"logo\">\r\n            <img src={logo} alt=\"Логотип Авиасейлс\"/>\r\n        </div>\r\n    )\r\n}\r\n","import \"./Loading.css\";\r\n\r\nexport default function Loading() {\r\n    return (\r\n        <div className=\"wrapper-loader\">\r\n            <div className=\"loader\">Loading...</div>\r\n        </div>                \r\n    )\r\n}\r\n","import './TransferFilter.css';\r\nimport { filterOptions, filterOptionsMap } from '../../utils/constants';\r\nimport Loading from '../loading/Loading';\r\n\r\nexport default function TransferFilter({ transferFilterOptions, changeCurrentTransferFilterOptions, isLoading }) {\r\n    const allOptions = [...filterOptionsMap.keys()];    \r\n\r\n    const handleFilterOptionChange = (option) => {    \r\n        switch (option) {\r\n            case filterOptions.ALL:\r\n                transferFilterOptions.includes(option) ? \r\n                    changeCurrentTransferFilterOptions([]):\r\n                    changeCurrentTransferFilterOptions(allOptions);\r\n                break;            \r\n            default:\r\n                transferFilterOptions.includes(option) ? \r\n                    changeCurrentTransferFilterOptions([...transferFilterOptions.filter((filter) => filter !== option && filter !== filterOptions.ALL)]) :                     \r\n                    changeCurrentTransferFilterOptions([...transferFilterOptions, option].length === allOptions.length - 1 ? allOptions : [...transferFilterOptions, option]);                     \r\n                break;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"transfer-filter\">\r\n            <h2 className=\"transfer-filter__title\">Количество пересадок</h2>\r\n            {isLoading && <Loading />}\r\n            <ul className=\"transfer-options\">\r\n                {allOptions && allOptions.map((option) => (\r\n                    <li key={option} className=\"transfer-options__option\">\r\n                        <label>\r\n                            <input \r\n                                type=\"checkbox\" \r\n                                className=\"visually-hidden\"\r\n                                checked={transferFilterOptions.includes(option)}\r\n                                onChange={() => handleFilterOptionChange(option)}\r\n                            />\r\n                            <span>{option}</span>\r\n                        </label>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import './TicketTypeSort.css';\r\nimport { sortTransferOptions } from '../../utils/constants';\r\nimport Loading from '../loading/Loading';\r\n\r\nexport default function TicketTypeSort({ currentSortOption, changeSortOption, isLoading }) {\r\n    const handleOptionChange = (option) => {\r\n        changeSortOption(option);\r\n    }\r\n\r\n    return (\r\n        <div className=\"ticket-type-sort\">\r\n            {isLoading && <Loading />}\r\n            <nav>\r\n                {sortTransferOptions && Object.entries(sortTransferOptions).map((prop) => {\r\n                    const [key, value] = prop;\r\n\r\n                    return (\r\n                        <button key={key} onClick={() => handleOptionChange(value)} className={`type-btn${currentSortOption === value ? \" active\" : \"\"}`}>\r\n                            <span>{value}</span>\r\n                        </button>\r\n                    )\r\n                })}\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n","import { sortTransferOptions, filterOptions, filterOptionsMap } from \"./constants\";\r\n\r\nexport const getPriceFormatted = (price) => `${price.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")} Р`;\r\n\r\nexport const getDurationFormatted = (durationInMinutes) => {\r\n    const hours = Math.floor(durationInMinutes / 60);\r\n    const minutes = durationInMinutes % 60;\r\n    return `${hours > 0 ? `${hours}ч` : ``} ${minutes > 0 ? `${minutes}м` : ``}`.trim();\r\n}\r\n\r\nexport const getTimeFromDate = (date) => new Date(date).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n\r\nexport const addMinutesToDate = (initialDate, minutesToAdd) => {\r\n    const startDate = new Date(initialDate);\r\n    const resultDate = new Date(startDate.getTime() + minutesToAdd * 60000);\r\n    return getTimeFromDate(resultDate);\r\n}\r\n\r\nconst getSortedTicketsByPrice = (ticketsToSort, ascOrder = true) => {\r\n    return ticketsToSort.sort((currentTicket, nextTicket) => {\r\n        return ascOrder ?\r\n        currentTicket.price - nextTicket.price :\r\n        nextTicket.price - currentTicket.price;\r\n    });\r\n}\r\n\r\nconst getSegmentsDurationReducer = (currentSegment, nextSegment) => currentSegment.duration + nextSegment.duration;\r\n\r\nconst getSegmentsStopsReducer = (currentSegment, nextSegment) => currentSegment.stops.length + nextSegment.stops.length;\r\n\r\nconst getSortedTicketsByDuration = (ticketsToSort, ascOrder = true) => {\r\n    return ticketsToSort.sort((currentTicket, nextTicket) => {\r\n        return ascOrder ? \r\n        currentTicket.segments.reduce(getSegmentsDurationReducer) - nextTicket.segments.reduce(getSegmentsDurationReducer) :\r\n        nextTicket.segments.reduce(getSegmentsDurationReducer) - currentTicket.segments.reduce(getSegmentsDurationReducer);\r\n    });\r\n}\r\n\r\nconst getOptimatlSortedTickets = (ticketsToSort) => {    \r\n    return ticketsToSort.sort((currentTicket, nextTicket) => {        \r\n        if (currentTicket.segments.reduce(getSegmentsStopsReducer) > nextTicket.segments.reduce(getSegmentsStopsReducer)) return 1;\r\n        if (currentTicket.segments.reduce(getSegmentsStopsReducer) < nextTicket.segments.reduce(getSegmentsStopsReducer)) return -1;\r\n        if (currentTicket.price > nextTicket.price) return 1;\r\n        if (currentTicket.price < nextTicket.price) return -1;\r\n\r\n        return 0;\r\n    });\r\n}\r\n\r\nconst getFilteredTickets = (tickets, currentFilterOptions) => {\r\n    if (currentFilterOptions.includes(filterOptions.ALL)) {\r\n        return tickets;\r\n    } \r\n\r\n    let filteredTickets = [];\r\n\r\n    currentFilterOptions.forEach((option) => {\r\n        const filteredTicketsByOption = tickets.filter((ticket) => ticket.segments.every((segment) => segment.stops.length === filterOptionsMap.get(option)));\r\n        filteredTickets = [...filteredTickets, ...filteredTicketsByOption];\r\n    })    \r\n\r\n    return filteredTickets;\r\n}\r\n\r\nexport const getSortedTickets = (tickets, currentSortOption, currentFilterOptions) => {        \r\n    const ticketsToSort = getFilteredTickets(tickets, currentFilterOptions);\r\n    \r\n    switch (currentSortOption) {\r\n        case sortTransferOptions.PRICE:            \r\n            return getSortedTicketsByPrice(ticketsToSort);\r\n        case sortTransferOptions.DURATION:        \r\n            return getSortedTicketsByDuration(ticketsToSort);\r\n        default:\r\n            return getOptimatlSortedTickets(ticketsToSort);\r\n    }\r\n}","import \"./Ticket.css\";\r\nimport { getPriceFormatted, getDurationFormatted, getTimeFromDate, addMinutesToDate } from \"../../utils/common\"; \r\n\r\nexport default function Ticket({ ticket }) {   \r\n    const { price, carrier, segments} = ticket; \r\n\r\n    const getStopsHeader = ({ stops }) => {        \r\n        switch (stops.length) {\r\n            case 0:\r\n                return \"прямой\";\r\n            case 1:\r\n                return `${stops.length} пересадка`;\r\n            case 2: \r\n            case 3: \r\n            case 4:\r\n                return `${stops.length} пересадки`;\r\n            case 5:\r\n                return `${stops.length} пересадок`;\r\n            default:\r\n                return `${stops.length} пересадок`;\r\n        }\r\n    }\r\n\r\n    const getStopsFromSegment = ({ stops }) => stops.length > 0 ? stops.join(\", \") : \"—\";\r\n\r\n    return (\r\n        <article className=\"ticket\">\r\n            <div className=\"ticket-header\">\r\n                <p className=\"price\">{getPriceFormatted(price)}</p>\r\n                <img src={`https://pics.avs.io/110/36/${carrier}.png`} className=\"company-logo\" alt={`Логотип авиакомпании ${carrier}`}/>\r\n            </div>\r\n            {segments.map((segment) => (\r\n                <div className=\"ticket-details\" key={`${segment.origin}${price}${carrier}`}>\r\n                    <div className=\"details-header\">\r\n                        <p className=\"route\"><span>{segment.origin}</span> - <span>{segment.destination}</span></p>\r\n                        <p className=\"duration\"><span>в пути</span></p>\r\n                        <p className=\"stops\"><span>{getStopsHeader(segment)}</span></p>\r\n                    </div>\r\n                    <div className=\"details-info\">\r\n                        <p className=\"route\"><span>{getTimeFromDate(segment.date)}</span> – <span>{addMinutesToDate(segment.date, segment.duration)}</span></p>\r\n                        <p className=\"duration\"><span>{getDurationFormatted(segment.duration)}</span></p>\r\n                        <p className=\"stops\"><span className={segment.stops.length > 0 ? \"\" : \"no-stops\"}>{getStopsFromSegment(segment)}</span></p>\r\n                    </div>                \r\n                </div>     \r\n            ))}       \r\n        </article>\r\n    )\r\n}\r\n","import \"./TicketTemplate.css\";\r\nimport Loading from \"../loading/Loading\";\r\n\r\nexport default function TicketTemplate() {\r\n    return (\r\n        <>\r\n            <Loading />\r\n            <div className=\"ticket-template\">\r\n                <div className=\"ticket-template-header\">\r\n                    <div className=\"ticket-template-price\"></div>\r\n                    <div className=\"ticket-template-logo\"></div>                \r\n                </div>\r\n                <div className=\"ticket-template-details\">\r\n                    <div className=\"ticket-template-row\">\r\n                        <div className=\"ticket-template-header\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"route-header\"></div>\r\n                                <div className=\"route\"></div>\r\n                            </div>\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"duration-header\"></div>\r\n                                <div className=\"duration\"></div>\r\n                            </div>\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"stops-header\"></div>\r\n                                <div className=\"stops\"></div>\r\n                            </div>\r\n                        </div>   \r\n                    </div>\r\n                    <div className=\"ticket-template-row\">\r\n                        <div className=\"ticket-template-header\">\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"route-header\"></div>\r\n                                <div className=\"route\"></div>\r\n                            </div>\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"duration-header\"></div>\r\n                                <div className=\"duration\"></div>\r\n                            </div>\r\n                            <div className=\"wrapper\">\r\n                                <div className=\"stops-header\"></div>\r\n                                <div className=\"stops\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>                 \r\n                </div>                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import Ticket from \"../ticket/Ticket\";\r\nimport \"./TicketList.css\";\r\nimport TicketTemplate from \"../ticket/TicketTemplate\";\r\n\r\nexport default function TicketList({ tickets, amountTodisplay, isLoading }) {   \r\n    const ticketsToDisplay = tickets.slice(0, amountTodisplay);\r\n\r\n    return (\r\n        <ul className=\"ticket-list\">\r\n            {isLoading && (\r\n                <li className=\"ticket-item ticket-item-loading\">\r\n                    <TicketTemplate />\r\n                </li>\r\n            )}\r\n            {!isLoading && ticketsToDisplay.length > 0 && ticketsToDisplay.map((ticket) => (\r\n                <li key={`${ticket.carrier}-${ticket.price}`} className=\"ticket-item\">                                    \r\n                    <Ticket ticket={ticket}/>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n","import \"./ShowMoreButton.css\";\r\nimport { DISPLAY_TICKETS_BY_DEFAULT } from \"../../utils/constants\";\r\n\r\nexport default function ShowMoreButton({ changeDisplayTicketsAmount }) {    \r\n    const handleButtonClick = () => changeDisplayTicketsAmount((prev) => prev + DISPLAY_TICKETS_BY_DEFAULT);\r\n\r\n    return (\r\n        <button className=\"btn-more\" onClick={handleButtonClick}>\r\n            {`показать ещё ${DISPLAY_TICKETS_BY_DEFAULT} билетов`}\r\n        </button>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { useTickets } from './hooks/useServer'\r\nimport './App.css'\r\nimport Logo from './components/logo/Logo';\r\nimport TransferFilter from './components/filters/TransferFilter';\r\nimport TicketTypeSort from './components/filters/TicketTypeSort';\r\nimport TicketList from './components/ticket-list/TicketList';\r\nimport ShowMoreButton from './components/show-more-button/ShowMoreButton';\r\nimport { filterOptions, DISPLAY_TICKETS_BY_DEFAULT, sortTransferOptions } from './utils/constants';\r\nimport { getSortedTickets } from \"../src/utils/common\";\r\n\r\nfunction App() {  \r\n  const { tickets, isPending, error } = useTickets();\r\n  const [currentTransferFilterOptions, setCurrentTransferFilterOptions] = useState(Object.values(filterOptions));\r\n  const [currentSortOption, setCurrentSortOption] = useState(sortTransferOptions.PRICE);\r\n  const [ticketsToDisplay, setTicketsToDisplay] = useState(DISPLAY_TICKETS_BY_DEFAULT);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Logo />\r\n      <h1 className=\"visually-hidden\">Страница поиска дешевых авиабилетов</h1>\r\n      <div className=\"outer-container\">\r\n        <TransferFilter transferFilterOptions={currentTransferFilterOptions} changeCurrentTransferFilterOptions={setCurrentTransferFilterOptions} isLoading={isPending}/>\r\n        <div className=\"inner-container\">\r\n          <TicketTypeSort currentSortOption={currentSortOption} changeSortOption={setCurrentSortOption} isLoading={isPending}/>          \r\n          {error && <p>{error}</p>}\r\n          {tickets && <TicketList tickets={getSortedTickets(tickets, currentSortOption, currentTransferFilterOptions)} amountTodisplay={ticketsToDisplay} isLoading={isPending}/>}\r\n          {!isPending &&  tickets && tickets.length > DISPLAY_TICKETS_BY_DEFAULT && <ShowMoreButton changeDisplayTicketsAmount={setTicketsToDisplay}/>}\r\n        </div>        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import { useState, useEffect } from \"react\";\r\nimport { searchURL, ticketsURL } from '../utils/constants';\r\nimport axios from \"axios\";\r\n\r\nexport const useTickets = () => {    \r\n    const [tickets, setTickets] = useState([]);    \r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {        \r\n        setError(null);\r\n        setIsPending(true);\r\n\r\n        const getSearchId = async () => {\r\n            try {\r\n                return await axios.get(searchURL);                     \r\n            } catch (err) {\r\n                console.log(err.message);\r\n                setIsPending(false);\r\n                setError(err.message);                \r\n            }\r\n        }\r\n\r\n        const subscribe = async (searchId) => {            \r\n            try {                \r\n                setIsPending(true);\r\n\r\n                const ticketsResponse = await axios.get(`${ticketsURL}/tickets?searchId=${searchId}`);\r\n                setTickets(prev => [...prev, ...ticketsResponse.data.tickets]);\r\n\r\n                if (!ticketsResponse.data.stop) {\r\n                    await subscribe(searchId);                    \r\n                } else {\r\n                    setIsPending(false);\r\n                }\r\n            } catch (error) {\r\n                setTimeout(() => {\r\n                    subscribe(searchId);\r\n                }, 1000);\r\n            }\r\n        }\r\n\r\n        getSearchId()\r\n            .then(({data}) => subscribe(data.searchId));        \r\n\r\n    }, []);\r\n\r\n    return { tickets, isPending, error };\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}